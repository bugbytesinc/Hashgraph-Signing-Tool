<ResourceDictionary x:Class="Hashgraph.UI.WPF.WindowStyles"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
                    xmlns:controls="clr-namespace:Hashgraph.UI.WPF.Controls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ControlTemplate x:Key="WindowButtonTemplate" TargetType="{x:Type Button}">
        <Grid Background="Transparent">
            <Border x:Name="MouseOverBorder"
                Background="{DynamicResource WindowControlMouseOverBackground}"
                Opacity="0" />
            <ContentPresenter x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="MouseOverBorder" Property="Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="36" />
        <Setter Property="Width" Value="36" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource WindowHeaderForeground}" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource WindowButtonTemplate}" />
    </Style>

    <ControlTemplate x:Key="WindowTemplate" TargetType="{x:Type Window}">
        <Border x:Name="RootBorder"
                BorderBrush="{DynamicResource WindowBorder}"
                BorderThickness="1">
            <Grid Margin="0 -1 0 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Rectangle Fill="{DynamicResource WindowHeaderBackground}" />
                    <DockPanel LastChildFill="False">
                        <Button x:Name="CloseButton"
                            Margin="4,0,8,0"
                            Click="OnCloseClick"
                            DockPanel.Dock="Right"                                
                            Style="{DynamicResource WindowButtonStyle}">
                            <controls:XamlImage Template="{DynamicResource Icon_Close}" />
                        </Button>
                        <Button x:Name="MaximizeRestoreButton"
                            Margin="4,0,0,0"
                            Click="OnMaximizeRestoreClick"
                            DockPanel.Dock="Right"
                            Style="{DynamicResource WindowButtonStyle}">
                            <controls:XamlImage x:Name="MaximizeRestoreIcon"
                                Template="{DynamicResource Icon_Maximize}" />
                        </Button>
                        <Button x:Name="MinimizeButton"
                            Margin="4,0,0,0"
                            Click="OnMinimizeClick"
                            DockPanel.Dock="Right"
                            Style="{DynamicResource WindowButtonStyle}">
                            <controls:XamlImage Template="{DynamicResource Icon_Minimize}" />
                        </Button>
                        <StackPanel x:Name="ExtraButtonArea" 
                                    Orientation="Horizontal" 
                                    DockPanel.Dock="Right">
                            <Button x:Name="ThemeButton"
                                Click="OnThemeClick"
                                ToolTip="Toggle Between Light &amp; Dark Theme"
                                Style="{DynamicResource WindowButtonStyle}">
                                <controls:XamlImage Template="{DynamicResource Icon_Theme}" />
                            </Button>
                        </StackPanel>
                        <controls:XamlImage 
                            Width="50"
                            Margin="0,0,0,0"
                            VerticalAlignment="Center"
                            DockPanel.Dock="Left"
                            Foreground="{DynamicResource WindowHeaderForeground}"
                            Template="{DynamicResource Icon_Hashgraph}" />
                        <TextBlock
                            Margin="8,0,0,0"                            
                            VerticalAlignment="Center"
                            DockPanel.Dock="Left"
                            FontSize="24"
                            Foreground="{DynamicResource WindowHeaderForeground}"
                            Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}" />
                    </DockPanel>
                </Grid>
                <Grid Grid.Row="1">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsActive" Value="True">
                <Setter TargetName="RootBorder" Property="BorderBrush" Value="{DynamicResource WindowActiveBorder}" />
            </Trigger>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter TargetName="RootBorder" Property="BorderThickness" Value="8" />
                <Setter TargetName="RootBorder" Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome GlassFrameThickness="0 0 0 0"
                                    CornerRadius="0"
                                    ResizeBorderThickness="4" 
                                    CaptionHeight="50" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{StaticResource WindowTemplate}"/>
    </Style>
</ResourceDictionary>