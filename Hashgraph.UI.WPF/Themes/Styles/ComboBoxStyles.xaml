<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="ComboBoxItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" 
                               StrokeDashArray="1 2" 
                               SnapsToDevicePixels="true" 
                               StrokeThickness="1" 
                               Stroke="{DynamicResource ControlFocusBorder}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxItemTemplate" TargetType="{x:Type ComboBoxItem}">
        <Border x:Name="Bd" 
                Background="{TemplateBinding Background}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                Padding="{TemplateBinding Padding}" 
                SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource ControlDisabledOpacity}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ListSelectedBackground}" />
                <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource ListSelectedBorder}" />
                <Setter Property="Foreground" Value="{DynamicResource ListSelectedForeground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ListMouseOverBackground}" />
                <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource ListMouseOverBorder}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsKeyboardFocused" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ListMouseOverBackground}" />
                <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource ListMouseOverBorder}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxItemFocusVisual}"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxItemTemplate}"/>
    </Style>
    <Style BasedOn="{StaticResource ComboBoxItemStyle}" TargetType="{x:Type ComboBoxItem}"/>
    <Style x:Key="ComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" 
                               StrokeDashArray="1 2" 
                               SnapsToDevicePixels="true" 
                               StrokeThickness="1" 
                               Stroke="{DynamicResource ControlFocusBorder}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate"  TargetType="{x:Type ToggleButton}">
        <Border x:Name="templateRoot" 
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="true">
            <Border x:Name="splitBorder" 
                    BorderThickness="1" 
                    BorderBrush="Transparent" 
                    HorizontalAlignment="Right" 
                    Margin="0" 
                    SnapsToDevicePixels="true" 
                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                <Path x:Name="arrow" 
                      Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" 
                      Fill="{DynamicResource GlyphForeground}" 
                      HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource ControlMouseOverBackground}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource ControlMouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Fill" TargetName="arrow" Value="{DynamicResource GlyphForeground}"/>
                <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource ControlPressedBackground}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource ControlPressedBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="{DynamicResource ControlDisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxToggleButtonTemplate}"/>
    </Style>
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" 
                   AllowsTransparency="true" 
                   Grid.ColumnSpan="2" 
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                   Margin="1" 
                   Placement="Bottom" 
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   VerticalOffset="-1">
                <Border x:Name="dropDownBorder" 
                        Background="{DynamicResource ContentBackground}" 
                        BorderBrush="{DynamicResource ControlBorder}"
                        BorderThickness="1">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" 
                                    HorizontalAlignment="Left" 
                                    Height="0" 
                                    VerticalAlignment="Top" 
                                    Width="0">
                                <Rectangle x:Name="opaqueRect" 
                                           Fill="{Binding Background, ElementName=dropDownBorder}" 
                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" 
                                            KeyboardNavigation.DirectionalNavigation="Contained" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" 
                          Background="{TemplateBinding Background}" 
                          BorderThickness="{TemplateBinding BorderThickness}" 
                          BorderBrush="{TemplateBinding BorderBrush}" 
                          Grid.ColumnSpan="2" 
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                          Style="{StaticResource ComboBoxToggleButtonStyle}"/>
            <ContentPresenter x:Name="contentPresenter" 
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                              Content="{TemplateBinding SelectionBoxItem}" 
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              IsHitTestVisible="false" 
                              Margin="{TemplateBinding Padding}" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="contentPresenter" Property="Opacity" Value="{DynamicResource ControlDisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="CaretBrush" Value="{DynamicResource ControlForeground}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource ControlHighlightBackground}" />
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" 
                                  Background="Transparent" 
                                  Focusable="false" 
                                  HorizontalScrollBarVisibility="Hidden" 
                                  VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" 
              SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" 
                   AllowsTransparency="true" 
                   Grid.ColumnSpan="2" 
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                   Placement="Bottom" 
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Border x:Name="dropDownBorder" 
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        Background="{DynamicResource ContentBackground}"
                        BorderBrush="{DynamicResource ControlBorder}"
                        BorderThickness="1" >
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" 
                              RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" 
                                    HorizontalAlignment="Left" 
                                    Height="0" 
                                    VerticalAlignment="Top" 
                                    Width="0">
                                <Rectangle x:Name="opaqueRect" 
                                           Fill="{Binding Background, ElementName=dropDownBorder}" 
                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" 
                                            KeyboardNavigation.DirectionalNavigation="Contained" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" 
                          Background="{TemplateBinding Background}" 
                          BorderThickness="{TemplateBinding BorderThickness}" 
                          BorderBrush="{TemplateBinding BorderBrush}" 
                          Grid.ColumnSpan="2" 
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                          Style="{StaticResource ComboBoxToggleButton}"/>
            <Border x:Name="border" 
                    Background="{DynamicResource ControlContentBackground}" 
                    Margin="{TemplateBinding BorderThickness}">
                <TextBox x:Name="PART_EditableTextBox" 
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                         IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" 
                         Margin="{TemplateBinding Padding}" 
                         Style="{StaticResource ComboBoxEditableTextBox}" 
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="{DynamicResource ControlDisabledOpacity}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource ControlForeground}"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorder}"/>
        <Setter Property="Foreground" Value="{DynamicResource ControlForeground}"/>
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource ComboBoxStyle}" TargetType="{x:Type ComboBox}" />

</ResourceDictionary>